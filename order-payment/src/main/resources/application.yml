server:
  port: 8080

spring:
  application:
    name: order-payment

  kafka:
    bootstrap-servers: 139.196.224.115:7000 #指定kafka server的地址，集群配多个，中间，逗号隔开
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: default_consumer_group #群组ID
      enable-auto-commit: true
      auto-commit-interval: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  activemq:
    broker-url: tcp://139.196.224.115:6860
    user: admin
    password: admin
    close-timeout: 15s   # 在考虑结束之前等待的时间
    in-memory: true      # 默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值。
    non-blocking-redelivery: false  # 是否在回滚回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留。
    send-timeout: 0     # 等待消息发送响应的时间。设置为0等待永远。
    queue-name: active.queue
    topic-name: active.topic
  rabbitmq:
    host: 139.196.224.115
    port: 6768
    username: breeze
    password: breeze1314520.
    virtual-host: /breeze

rocketmq:
  name-server: 139.196.224.115:6900
  producer:
    group: ${spring.application.name}



